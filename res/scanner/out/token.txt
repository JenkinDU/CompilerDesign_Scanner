Line 1:1 CLASS class 
Line 1:2 ID Utility 
Line 1:3 OPENBRACE { 
Line 2:1 INT int 
Line 2:2 ID var1 
Line 2:3 OPENBRACKET [ 
Line 2:4 INTEGER 4 
Line 2:5 CLOSEBRACKET ] 
Line 2:6 OPENBRACKET [ 
Line 2:7 INTEGER 5 
Line 2:8 CLOSEBRACKET ] 
Line 2:9 OPENBRACKET [ 
Line 2:10 INTEGER 7 
Line 2:11 CLOSEBRACKET ] 
Line 2:12 OPENBRACKET [ 
Line 2:13 INTEGER 8 
Line 2:14 CLOSEBRACKET ] 
Line 2:15 OPENBRACKET [ 
Line 2:16 INTEGER 9 
Line 2:17 CLOSEBRACKET ] 
Line 2:18 OPENBRACKET [ 
Line 2:19 INTEGER 1 
Line 2:20 CLOSEBRACKET ] 
Line 2:21 OPENBRACKET [ 
Line 2:22 INTEGER 0 
Line 2:23 CLOSEBRACKET ] 
Line 2:24 SEMICOLON ; 
Line 3:1 RESERVED_FLOAT float 
Line 3:2 ID var2 
Line 3:3 SEMICOLON ; 
Line 4:1 INT int 
Line 4:2 ID findMax 
Line 4:3 OPENPAR ( 
Line 4:4 INT int 
Line 4:5 ID array 
Line 4:6 OPENBRACKET [ 
Line 4:7 INTEGER 100 
Line 4:8 CLOSEBRACKET ] 
Line 4:9 CLOSEPAR ) 
Line 4:10 OPENBRACE { 
Line 5:1 INT int 
Line 5:2 ID maxValue 
Line 5:3 SEMICOLON ; 
Line 6:1 INT int 
Line 6:2 ID idx 
Line 6:3 SEMICOLON ; 
Line 7:1 ID maxValue 
Line 7:2 ASSGN = 
Line 7:3 ID array 
Line 7:4 OPENBRACKET [ 
Line 7:5 INTEGER 100 
Line 7:6 CLOSEBRACKET ] 
Line 7:7 SEMICOLON ; 
Line 8:1 FOR for 
Line 8:2 OPENPAR ( 
Line 8:3 INT int 
Line 8:4 ID idx2 
Line 8:5 ASSGN = 
Line 8:6 INTEGER 99 
Line 8:7 SEMICOLON ; 
Line 8:8 ID idx 
Line 8:9 GT > 
Line 8:10 INTEGER 0 
Line 8:11 SEMICOLON ; 
Line 8:12 ID idx 
Line 8:13 ASSGN = 
Line 8:14 ID idx 
Line 8:15 MINUS - 
Line 8:16 INTEGER 1 
Line 8:17 CLOSEPAR ) 
Line 8:18 OPENBRACE { 
Line 9:1 IF if 
Line 9:2 OPENPAR ( 
Line 9:3 ID array 
Line 9:4 OPENBRACKET [ 
Line 9:5 ID idx 
Line 9:6 CLOSEBRACKET ] 
Line 9:7 GT > 
Line 9:8 ID maxValue 
Line 9:9 CLOSEPAR ) 
Line 9:10 THEN then 
Line 9:11 OPENBRACE { 
Line 10:1 ID maxValue 
Line 10:2 ASSGN = 
Line 10:3 ID array 
Line 10:4 OPENBRACKET [ 
Line 10:5 ID idx 
Line 10:6 CLOSEBRACKET ] 
Line 10:7 SEMICOLON ; 
Line 11:1 CLOSEBRACE } 
Line 11:2 ELSE else 
Line 11:3 OPENBRACE { 
Line 11:4 CLOSEBRACE } 
Line 11:5 SEMICOLON ; 
Line 12:1 CLOSEBRACE } 
Line 12:2 SEMICOLON ; 
Line 13:1 RETURN return 
Line 13:2 OPENPAR ( 
Line 13:3 ID maxValue 
Line 13:4 CLOSEPAR ) 
Line 13:5 SEMICOLON ; 
Line 14:1 CLOSEBRACE } 
Line 14:2 SEMICOLON ; 
Line 15:1 INT int 
Line 15:2 ID findMin 
Line 15:3 OPENPAR ( 
Line 15:4 INT int 
Line 15:5 ID array 
Line 15:6 OPENBRACKET [ 
Line 15:7 INTEGER 100 
Line 15:8 CLOSEBRACKET ] 
Line 15:9 CLOSEPAR ) 
Line 15:10 OPENBRACE { 
Line 16:1 INT int 
Line 16:2 ID minValue 
Line 16:3 SEMICOLON ; 
Line 17:1 INT int 
Line 17:2 ID idx 
Line 17:3 SEMICOLON ; 
Line 18:1 ID minValue 
Line 18:2 ASSGN = 
Line 18:3 ID array 
Line 18:4 OPENBRACKET [ 
Line 18:5 INTEGER 100 
Line 18:6 CLOSEBRACKET ] 
Line 18:7 SEMICOLON ; 
Line 19:1 FOR for 
Line 19:2 OPENPAR ( 
Line 19:3 INT int 
Line 19:4 ID idx2 
Line 19:5 ASSGN = 
Line 19:6 INTEGER 1 
Line 19:7 SEMICOLON ; 
Line 19:8 ID idx 
Line 19:9 LESSEQ <= 
Line 19:10 INTEGER 99 
Line 19:11 SEMICOLON ; 
Line 19:12 ID idx 
Line 19:13 ASSGN = 
Line 19:14 OPENPAR ( 
Line 19:15 ID idx 
Line 19:16 CLOSEPAR ) 
Line 19:17 PLUS + 
Line 19:18 INTEGER 1 
Line 19:19 CLOSEPAR ) 
Line 19:20 OPENBRACE { 
Line 20:1 IF if 
Line 20:2 OPENPAR ( 
Line 20:3 ID array 
Line 20:4 OPENBRACKET [ 
Line 20:5 ID idx 
Line 20:6 CLOSEBRACKET ] 
Line 20:7 LT < 
Line 20:8 ID minValue 
Line 20:9 CLOSEPAR ) 
Line 20:10 THEN then 
Line 20:11 OPENBRACE { 
Line 21:1 ID minValue 
Line 21:2 ASSGN = 
Line 21:3 ID array 
Line 21:4 OPENBRACKET [ 
Line 21:5 ID idx 
Line 21:6 CLOSEBRACKET ] 
Line 21:7 SEMICOLON ; 
Line 22:1 CLOSEBRACE } 
Line 22:2 ELSE else 
Line 22:3 OPENBRACE { 
Line 22:4 CLOSEBRACE } 
Line 22:5 SEMICOLON ; 
Line 23:1 CLOSEBRACE } 
Line 23:2 SEMICOLON ; 
Line 24:1 RETURN return 
Line 24:2 OPENPAR ( 
Line 24:3 ID minValue 
Line 24:4 CLOSEPAR ) 
Line 24:5 SEMICOLON ; 
Line 25:1 CLOSEBRACE } 
Line 25:2 SEMICOLON ; 
Line 26:1 CLOSEBRACE } 
Line 26:2 SEMICOLON ; 
Line 27:1 PROGRAM program 
Line 27:2 OPENBRACE { 
Line 28:1 INT int 
Line 28:2 ID sample 
Line 28:3 OPENBRACKET [ 
Line 28:4 INTEGER 100 
Line 28:5 CLOSEBRACKET ] 
Line 28:6 SEMICOLON ; 
Line 29:1 INT int 
Line 29:2 ID idx 
Line 29:3 SEMICOLON ; 
Line 30:1 INT int 
Line 30:2 ID maxValue 
Line 30:3 SEMICOLON ; 
Line 31:1 INT int 
Line 31:2 ID minValue 
Line 31:3 SEMICOLON ; 
Line 32:1 ID Utility 
Line 32:2 ID utility 
Line 32:3 SEMICOLON ; 
Line 33:1 ID Utility 
Line 33:2 ID arrayUtility 
Line 33:3 OPENBRACKET [ 
Line 33:4 INTEGER 2 
Line 33:5 CLOSEBRACKET ] 
Line 33:6 OPENBRACKET [ 
Line 33:7 INTEGER 3 
Line 33:8 CLOSEBRACKET ] 
Line 33:9 OPENBRACKET [ 
Line 33:10 INTEGER 6 
Line 33:11 CLOSEBRACKET ] 
Line 33:12 OPENBRACKET [ 
Line 33:13 INTEGER 7 
Line 33:14 CLOSEBRACKET ] 
Line 33:15 SEMICOLON ; 
Line 34:1 FOR for 
Line 34:2 OPENPAR ( 
Line 34:3 INT int 
Line 34:4 ID t 
Line 34:5 ASSGN = 
Line 34:6 INTEGER 0 
Line 34:7 SEMICOLON ; 
Line 34:8 ID t 
Line 34:9 LESSEQ <= 
Line 34:10 INTEGER 100 
Line 34:11 SEMICOLON ; 
Line 34:12 ID t 
Line 34:13 ASSGN = 
Line 34:14 ID t 
Line 34:15 PLUS + 
Line 34:16 INTEGER 1 
Line 34:17 CLOSEPAR ) 
Line 34:18 OPENBRACE { 
Line 35:1 GET get 
Line 35:2 OPENPAR ( 
Line 35:3 ID sample 
Line 35:4 OPENBRACKET [ 
Line 35:5 ID t 
Line 35:6 CLOSEBRACKET ] 
Line 35:7 CLOSEPAR ) 
Line 35:8 SEMICOLON ; 
Line 36:1 ID sample 
Line 36:2 OPENBRACKET [ 
Line 36:3 ID t 
Line 36:4 CLOSEBRACKET ] 
Line 36:5 ASSGN = 
Line 36:6 OPENPAR ( 
Line 36:7 ID sample 
Line 36:8 OPENBRACKET [ 
Line 36:9 ID t 
Line 36:10 CLOSEBRACKET ] 
Line 36:11 STAR * 
Line 36:12 ID randomize 
Line 36:13 OPENPAR ( 
Line 36:14 CLOSEPAR ) 
Line 36:15 CLOSEPAR ) 
Line 36:16 SEMICOLON ; 
Line 37:1 CLOSEBRACE } 
Line 37:2 SEMICOLON ; 
Line 38:1 ID maxValue 
Line 38:2 ASSGN = 
Line 38:3 ID utility 
Line 38:4 DOT . 
Line 38:5 ID findMax 
Line 38:6 OPENPAR ( 
Line 38:7 ID sample 
Line 38:8 CLOSEPAR ) 
Line 38:9 SEMICOLON ; 
Line 39:1 ID minValue 
Line 39:2 ASSGN = 
Line 39:3 ID utility 
Line 39:4 DOT . 
Line 39:5 ID findMin 
Line 39:6 OPENPAR ( 
Line 39:7 ID sample 
Line 39:8 CLOSEPAR ) 
Line 39:9 SEMICOLON ; 
Line 40:1 ID utility 
Line 40:2 DOT . 
Line 40:3 ID var1 
Line 40:4 OPENBRACKET [ 
Line 40:5 INTEGER 4 
Line 40:6 CLOSEBRACKET ] 
Line 40:7 OPENBRACKET [ 
Line 40:8 INTEGER 1 
Line 40:9 CLOSEBRACKET ] 
Line 40:10 OPENBRACKET [ 
Line 40:11 INTEGER 0 
Line 40:12 CLOSEBRACKET ] 
Line 40:13 OPENBRACKET [ 
Line 40:14 INTEGER 0 
Line 40:15 CLOSEBRACKET ] 
Line 40:16 OPENBRACKET [ 
Line 40:17 INTEGER 0 
Line 40:18 CLOSEBRACKET ] 
Line 40:19 OPENBRACKET [ 
Line 40:20 INTEGER 0 
Line 40:21 CLOSEBRACKET ] 
Line 40:22 OPENBRACKET [ 
Line 40:23 INTEGER 0 
Line 40:24 CLOSEBRACKET ] 
Line 40:25 ASSGN = 
Line 40:26 INTEGER 10 
Line 40:27 SEMICOLON ; 
Line 41:1 ID arrayUtility 
Line 41:2 OPENBRACKET [ 
Line 41:3 INTEGER 1 
Line 41:4 CLOSEBRACKET ] 
Line 41:5 OPENBRACKET [ 
Line 41:6 INTEGER 1 
Line 41:7 CLOSEBRACKET ] 
Line 41:8 OPENBRACKET [ 
Line 41:9 INTEGER 1 
Line 41:10 CLOSEBRACKET ] 
Line 41:11 OPENBRACKET [ 
Line 41:12 INTEGER 1 
Line 41:13 CLOSEBRACKET ] 
Line 41:14 DOT . 
Line 41:15 ID var1 
Line 41:16 OPENBRACKET [ 
Line 41:17 INTEGER 4 
Line 41:18 CLOSEBRACKET ] 
Line 41:19 OPENBRACKET [ 
Line 41:20 INTEGER 1 
Line 41:21 CLOSEBRACKET ] 
Line 41:22 OPENBRACKET [ 
Line 41:23 INTEGER 0 
Line 41:24 CLOSEBRACKET ] 
Line 41:25 OPENBRACKET [ 
Line 41:26 INTEGER 0 
Line 41:27 CLOSEBRACKET ] 
Line 41:28 OPENBRACKET [ 
Line 41:29 INTEGER 0 
Line 41:30 CLOSEBRACKET ] 
Line 41:31 OPENBRACKET [ 
Line 41:32 INTEGER 0 
Line 41:33 CLOSEBRACKET ] 
Line 41:34 OPENBRACKET [ 
Line 41:35 INTEGER 0 
Line 41:36 CLOSEBRACKET ] 
Line 41:37 ASSGN = 
Line 41:38 INTEGER 2 
Line 41:39 SEMICOLON ; 
Line 42:1 PUT put 
Line 42:2 OPENPAR ( 
Line 42:3 ID maxValue 
Line 42:4 CLOSEPAR ) 
Line 42:5 SEMICOLON ; 
Line 43:1 PUT put 
Line 43:2 OPENPAR ( 
Line 43:3 ID minValue 
Line 43:4 CLOSEPAR ) 
Line 43:5 SEMICOLON ; 
Line 44:1 CLOSEBRACE } 
Line 44:2 SEMICOLON ; 
Line 45:1 RESERVED_FLOAT float 
Line 45:2 ID randomize 
Line 45:3 OPENPAR ( 
Line 45:4 CLOSEPAR ) 
Line 45:5 OPENBRACE { 
Line 46:1 RESERVED_FLOAT float 
Line 46:2 ID value 
Line 46:3 SEMICOLON ; 
Line 47:1 ID value 
Line 47:2 ASSGN = 
Line 47:3 INTEGER 100 
Line 47:4 STAR * 
Line 47:5 OPENPAR ( 
Line 47:6 INTEGER 2 
Line 47:7 PLUS + 
Line 47:8 FLOAT 3.0 
Line 47:9 SLASH / 
Line 47:10 FLOAT 7.0006 
Line 47:11 CLOSEPAR ) 
Line 47:12 SEMICOLON ; 
Line 48:1 ID value 
Line 48:2 ASSGN = 
Line 48:3 FLOAT 1.05 
Line 48:4 PLUS + 
Line 48:5 OPENPAR ( 
Line 48:6 OPENPAR ( 
Line 48:7 FLOAT 2.04 
Line 48:8 STAR * 
Line 48:9 FLOAT 2.47 
Line 48:10 CLOSEPAR ) 
Line 48:11 MINUS - 
Line 48:12 FLOAT 3.0 
Line 48:13 CLOSEPAR ) 
Line 48:14 PLUS + 
Line 48:15 FLOAT 7.0006 
Line 48:16 SEMICOLON ; 
Line 49:1 RETURN return 
Line 49:2 OPENPAR ( 
Line 49:3 ID value 
Line 49:4 CLOSEPAR ) 
Line 49:5 SEMICOLON ; 
Line 50:1 CLOSEBRACE } 
Line 50:2 SEMICOLON ; 
