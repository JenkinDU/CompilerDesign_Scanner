Line 1:1 OPENCMT /* 
Line 6:1 CLOSECMT */ 
Line 7:1 CMT // 
Line 8:1 ID public 
Line 8:2 CLASS class 
Line 8:3 ID Utility 
Line 8:4 OPENBRACE { 
Line 9:1 CMT // 
Line 10:1 INT int 
Line 10:2 ID noFunctionBody 
Line 10:3 OPENPAR ( 
Line 10:4 CLOSEPAR ) 
Line 10:5 SEMICOLON ; 
Line 11:1 ID Custome 
Line 11:2 ID customeFunc 
Line 11:3 OPENPAR ( 
Line 11:4 ID Custome 
Line 11:5 ID id 
Line 11:6 COMMA , 
Line 11:7 RESERVED_FLOAT float 
Line 11:8 ID array 
Line 11:9 OPENBRACKET [ 
Line 11:10 FLOAT 10.0 
Line 11:11 CLOSEBRACKET ] 
Line 11:12 COMMA , 
Line 11:13 INT int 
Line 11:14 ID mult 
Line 11:15 OPENBRACKET [ 
Line 11:16 MINUS - 
Line 11:17 INTEGER 10 
Line 11:18 CLOSEBRACKET ] 
Line 11:19 CLOSEPAR ) 
Line 11:20 OPENBRACE { 
Line 11:21 CMT // 
Line 12:1 OPENCMT /* 
Line 14:1 CLOSECMT */ 
Line 15:1 CMT // 
Line 16:1 IF if 
Line 16:2 OPENPAR ( 
Line 16:3 OPENPAR ( 
Line 16:4 ID variable 
Line 16:5 OPENBRACKET [ 
Line 16:6 INTEGER 1 
Line 16:7 CLOSEBRACKET ] 
Line 16:8 DOT . 
Line 16:9 ID id 
Line 16:10 OPENBRACKET [ 
Line 16:11 INTEGER 2 
Line 16:12 CLOSEBRACKET ] 
Line 16:13 AND and 
Line 16:14 FLOAT 100.0 
Line 16:15 CLOSEPAR ) 
Line 16:16 OR or 
Line 16:17 ID variable 
Line 16:18 OPENBRACKET [ 
Line 16:19 INTEGER 1 
Line 16:20 CLOSEBRACKET ] 
Line 16:21 DOT . 
Line 16:22 ID id 
Line 16:23 OPENBRACKET [ 
Line 16:24 INTEGER 2 
Line 16:25 CLOSEBRACKET ] 
Line 16:26 AND and 
Line 16:27 FLOAT 100.0 
Line 16:28 OPENCMT /* 
Line 16:29 CLOSECMT */ 
Line 16:30 ID variable 
Line 16:31 OPENBRACKET [ 
Line 16:32 INTEGER 0 
Line 16:33 CLOSEBRACKET ] 
Line 16:34 PLUS + 
Line 16:35 NOT not 
Line 16:36 OPENPAR ( 
Line 16:37 PLUS + 
Line 16:38 ID id 
Line 16:39 OPENPAR ( 
Line 16:40 ID id 
Line 16:41 OPENBRACKET [ 
Line 16:42 INTEGER 0 
Line 16:43 CLOSEBRACKET ] 
Line 16:44 CLOSEPAR ) 
Line 16:45 CLOSEPAR ) 
Line 16:46 SLASH / 
Line 16:47 NOT not 
Line 16:48 MINUS - 
Line 16:49 ID variable 
Line 16:50 OPENBRACKET [ 
Line 16:51 INTEGER 0 
Line 16:52 CLOSEBRACKET ] 
Line 16:53 DOT . 
Line 16:54 ID id 
Line 16:55 OPENPAR ( 
Line 16:56 ID v 
Line 16:57 AND and 
Line 16:58 FLOAT 100.0 
Line 16:59 CLOSEPAR ) 
Line 16:60 CLOSEPAR ) 
Line 16:61 THEN then 
Line 16:62 OPENBRACE { 
Line 17:1 ID value 
Line 17:2 ASSGN = 
Line 17:3 ID id 
Line 17:4 OPENBRACKET [ 
Line 17:5 INTEGER 0 
Line 17:6 CLOSEBRACKET ] 
Line 17:7 OPENBRACKET [ 
Line 17:8 INTEGER 1 
Line 17:9 CLOSEBRACKET ] 
Line 17:10 PLUS + 
Line 17:11 NOT not 
Line 17:12 OPENPAR ( 
Line 17:13 PLUS + 
Line 17:14 ID id 
Line 17:15 OPENBRACKET [ 
Line 17:16 INTEGER 1 
Line 17:17 CLOSEBRACKET ] 
Line 17:18 OPENPAR ( 
Line 17:19 ID id 
Line 17:20 OPENBRACKET [ 
Line 17:21 INTEGER 0 
Line 17:22 CLOSEBRACKET ] 
Line 17:23 CLOSEPAR ) 
Line 17:24 CLOSEPAR ) 
Line 17:25 SEMICOLON ; 
Line 18:1 FOR for 
Line 18:2 OPENPAR ( 
Line 18:3 ID id 
Line 18:4 ID id 
Line 18:5 ASSGN = 
Line 18:6 NOT not 
Line 18:7 ID value 
Line 18:8 OPENBRACKET [ 
Line 18:9 INTEGER 0 
Line 18:10 CLOSEBRACKET ] 
Line 18:11 SEMICOLON ; 
Line 18:12 ID value 
Line 18:13 OPENPAR ( 
Line 18:14 ID id 
Line 18:15 NOTEQ <> 
Line 18:16 INTEGER 5 
Line 18:17 CLOSEPAR ) 
Line 18:18 LESSEQ <= 
Line 18:19 NOT not 
Line 18:20 MINUS - 
Line 18:21 ID id 
Line 18:22 OPENBRACKET [ 
Line 18:23 INTEGER 0 
Line 18:24 CLOSEBRACKET ] 
Line 18:25 SEMICOLON ; 
Line 18:26 ID value 
Line 18:27 OPENBRACKET [ 
Line 18:28 INTEGER 0 
Line 18:29 CLOSEBRACKET ] 
Line 18:30 ASSGN = 
Line 18:31 ID value 
Line 18:32 OPENBRACKET [ 
Line 18:33 INTEGER 1 
Line 18:34 CLOSEBRACKET ] 
Line 18:35 DOT . 
Line 18:36 ID v 
Line 18:37 OPENPAR ( 
Line 18:38 CLOSEPAR ) 
Line 18:39 CLOSEPAR ) 
Line 18:40 OPENBRACE { 
Line 19:1 IF if 
Line 19:2 OPENPAR ( 
Line 19:3 OPENPAR ( 
Line 19:4 ID id 
Line 19:5 OPENBRACKET [ 
Line 19:6 INTEGER 1 
Line 19:7 CLOSEBRACKET ] 
Line 19:8 DOT . 
Line 19:9 ID id 
Line 19:10 OPENBRACKET [ 
Line 19:11 INTEGER 2 
Line 19:12 CLOSEBRACKET ] 
Line 19:13 AND and 
Line 19:14 FLOAT 100.0 
Line 19:15 CLOSEPAR ) 
Line 19:16 OR or 
Line 19:17 ID id 
Line 19:18 OPENBRACKET [ 
Line 19:19 INTEGER 1 
Line 19:20 CLOSEBRACKET ] 
Line 19:21 DOT . 
Line 19:22 ID id 
Line 19:23 OPENBRACKET [ 
Line 19:24 INTEGER 2 
Line 19:25 CLOSEBRACKET ] 
Line 19:26 AND and 
Line 19:27 FLOAT 100.0 
Line 19:28 EQUAL == 
Line 19:29 ID id 
Line 19:30 OPENBRACKET [ 
Line 19:31 INTEGER 0 
Line 19:32 CLOSEBRACKET ] 
Line 19:33 PLUS + 
Line 19:34 NOT not 
Line 19:35 OPENPAR ( 
Line 19:36 PLUS + 
Line 19:37 ID id 
Line 19:38 OPENBRACKET [ 
Line 19:39 INTEGER 0 
Line 19:40 CLOSEBRACKET ] 
Line 19:41 OPENPAR ( 
Line 19:42 ID id 
Line 19:43 OPENBRACKET [ 
Line 19:44 INTEGER 1 
Line 19:45 CLOSEBRACKET ] 
Line 19:46 CLOSEPAR ) 
Line 19:47 CLOSEPAR ) 
Line 19:48 SLASH / 
Line 19:49 NOT not 
Line 19:50 MINUS - 
Line 19:51 ID variable 
Line 19:52 OPENBRACKET [ 
Line 19:53 INTEGER 0 
Line 19:54 CLOSEBRACKET ] 
Line 19:55 DOT . 
Line 19:56 ID v 
Line 19:57 OPENPAR ( 
Line 19:58 ID v 
Line 19:59 OPENBRACKET [ 
Line 19:60 INTEGER 1 
Line 19:61 CLOSEBRACKET ] 
Line 19:62 DOT . 
Line 19:63 ID id 
Line 19:64 AND and 
Line 19:65 FLOAT 100.0 
Line 19:66 CLOSEPAR ) 
Line 19:67 CLOSEPAR ) 
Line 19:68 THEN then 
Line 19:69 OPENBRACE { 
Line 20:1 CMT // 
Line 21:1 ID anErrorCall 
Line 21:2 OPENPAR ( 
Line 21:3 CLOSEPAR ) 
Line 21:4 SEMICOLON ; 
Line 22:1 GET get 
Line 22:2 OPENPAR ( 
Line 22:3 ID maxValue 
Line 22:4 CLOSEPAR ) 
Line 22:5 SEMICOLON ; 
Line 23:1 PUT put 
Line 23:2 OPENPAR ( 
Line 23:3 ID minValue 
Line 23:4 CLOSEPAR ) 
Line 23:5 SEMICOLON ; 
Line 24:1 ID maxValue 
Line 24:2 ASSGN = 
Line 24:3 ID array 
Line 24:4 OPENBRACKET [ 
Line 24:5 ID idx 
Line 24:6 CLOSEBRACKET ] 
Line 24:7 SEMICOLON ; 
Line 25:1 CLOSEBRACE } 
Line 25:2 ELSE else 
Line 25:3 CMT // 
Line 26:1 CLOSEBRACE } 
Line 26:2 SEMICOLON ; 
Line 27:1 CLOSEBRACE } 
Line 27:2 ELSE else 
Line 28:1 CMT // 
Line 29:1 GET get 
Line 29:2 OPENPAR ( 
Line 29:3 CLOSEPAR ) 
Line 29:4 SEMICOLON ; 
Line 30:1 SEMICOLON ; 
Line 31:1 RETURN return 
Line 31:2 OPENPAR ( 
Line 31:3 ID maxValue 
Line 31:4 CLOSEPAR ) 
Line 31:5 SEMICOLON ; 
Line 32:1 GET get 
Line 32:2 OPENPAR ( 
Line 32:3 ID maxValue 
Line 32:4 OPENBRACKET [ 
Line 32:5 INTEGER 0 
Line 32:6 CLOSEBRACKET ] 
Line 32:7 DOT . 
Line 32:8 ID A 
Line 32:9 DOT . 
Line 32:10 ID B 
Line 32:11 DOT . 
Line 32:12 ID C 
Line 32:13 OPENBRACKET [ 
Line 32:14 INTEGER 1 
Line 32:15 CLOSEBRACKET ] 
Line 32:16 CLOSEPAR ) 
Line 32:17 SEMICOLON ; 
Line 33:1 PUT put 
Line 33:2 OPENPAR ( 
Line 33:3 NOT not 
Line 33:4 OPENPAR ( 
Line 33:5 ID id 
Line 33:6 OPENBRACKET [ 
Line 33:7 INTEGER 1 
Line 33:8 CLOSEBRACKET ] 
Line 33:9 AND and 
Line 33:10 FLOAT 100.0 
Line 33:11 CLOSEPAR ) 
Line 33:12 CLOSEPAR ) 
Line 33:13 SEMICOLON ; 
Line 34:1 CMT // 
Line 35:1 INT int 
Line 35:2 ID value 
Line 35:3 SEMICOLON ; 
Line 36:1 RESERVED_FLOAT float 
Line 36:2 ID v 
Line 36:3 SEMICOLON ; 
Line 37:1 ID Custom 
Line 37:2 ID variable 
Line 37:3 OPENBRACKET [ 
Line 37:4 INTEGER 1 
Line 37:5 CLOSEBRACKET ] 
Line 37:6 OPENBRACKET [ 
Line 37:7 INTEGER 2 
Line 37:8 CLOSEBRACKET ] 
Line 37:9 SEMICOLON ; 
Line 38:1 ID variable 
Line 38:2 ASSGN = 
Line 38:3 ID utility 
Line 38:4 DOT . 
Line 38:5 ID getCustomValue 
Line 38:6 OPENPAR ( 
Line 38:7 ID value 
Line 38:8 CLOSEPAR ) 
Line 38:9 SEMICOLON ; 
Line 39:1 CLOSEBRACE } 
Line 39:2 CMT // 
Line 41:1 ID Custome 
Line 41:2 ID emptyFunc 
Line 41:3 OPENPAR ( 
Line 41:4 ID Custome 
Line 41:5 ID id 
Line 41:6 COMMA , 
Line 41:7 RESERVED_FLOAT float 
Line 41:8 ID array 
Line 41:9 OPENBRACKET [ 
Line 41:10 INTEGER 100 
Line 41:11 CLOSEBRACKET ] 
Line 41:12 CLOSEPAR ) 
Line 41:13 OPENBRACE { 
Line 42:1 CMT // 
Line 43:1 ID Custome 
Line 43:2 ID emptyFunc 
Line 43:3 OPENPAR ( 
Line 43:4 ID Custome 
Line 43:5 ID id 
Line 43:6 COMMA , 
Line 43:7 RESERVED_FLOAT float 
Line 43:8 ID array 
Line 43:9 OPENBRACKET [ 
Line 43:10 INTEGER 100 
Line 43:11 CLOSEBRACKET ] 
Line 43:12 CLOSEPAR ) 
Line 43:13 OPENBRACE { 
Line 43:14 CLOSEBRACE } 
Line 43:15 SEMICOLON ; 
Line 44:1 CLOSEBRACE } 
Line 44:2 SEMICOLON ; 
Line 45:1 CMT // 
Line 46:1 INT int 
Line 46:2 ID var1 
Line 46:3 OPENBRACKET [ 
Line 46:4 INTEGER 4 
Line 46:5 CLOSEBRACKET ] 
Line 46:6 OPENBRACKET [ 
Line 46:7 INTEGER 5 
Line 46:8 CLOSEBRACKET ] 
Line 46:9 OPENBRACKET [ 
Line 46:10 INTEGER 7 
Line 46:11 CLOSEBRACKET ] 
Line 46:12 DOT . 
Line 46:13 OPENBRACKET [ 
Line 46:14 INTEGER 8 
Line 46:15 CLOSEBRACKET ] 
Line 46:16 OPENBRACKET [ 
Line 46:17 INTEGER 9 
Line 46:18 CLOSEBRACKET ] 
Line 46:19 OPENBRACKET [ 
Line 46:20 INTEGER 1 
Line 46:21 CLOSEBRACKET ] 
Line 46:22 OPENBRACKET [ 
Line 46:23 INTEGER 0 
Line 46:24 CLOSEBRACKET ] 
Line 46:25 SEMICOLON ; 
Line 47:1 RESERVED_FLOAT float 
Line 47:2 ID var2 
Line 47:3 SEMICOLON ; 
Line 48:1 INT int 
Line 48:2 ID findMax 
Line 48:3 OPENPAR ( 
Line 48:4 INT int 
Line 48:5 ID array 
Line 48:6 OPENBRACKET [ 
Line 48:7 INTEGER 100 
Line 48:8 CLOSEBRACKET ] 
Line 48:9 CLOSEPAR ) 
Line 48:10 OPENBRACE { 
Line 49:1 INT int 
Line 49:2 ID maxValue 
Line 49:3 SEMICOLON ; 
Line 50:1 ID maxValue 
Line 50:2 ASSGN = 
Line 50:3 ID array 
Line 50:4 OPENBRACKET [ 
Line 50:5 INTEGER 100 
Line 50:6 CLOSEBRACKET ] 
Line 50:7 SEMICOLON ; 
Line 51:1 CMT // 
Line 52:1 FOR for 
Line 52:2 OPENPAR ( 
Line 52:3 INT int 
Line 52:4 ID idx 
Line 52:5 ASSGN = 
Line 52:6 INTEGER 99 
Line 52:7 SEMICOLON ; 
Line 52:8 ID idx 
Line 52:9 GT > 
Line 52:10 INTEGER 0 
Line 52:11 SEMICOLON ; 
Line 52:12 OPENCMT /* 
Line 52:13 CLOSECMT */ 
Line 52:14 CLOSEPAR ) 
Line 52:15 OPENBRACE { 
Line 53:1 IF if 
Line 53:2 OPENPAR ( 
Line 53:3 ID array 
Line 53:4 OPENBRACKET [ 
Line 53:5 ID idx 
Line 53:6 CLOSEBRACKET ] 
Line 53:7 GT > 
Line 53:8 ID maxValue 
Line 53:9 CLOSEPAR ) 
Line 53:10 THEN then 
Line 53:11 OPENBRACE { 
Line 54:1 ID maxValue 
Line 54:2 ASSGN = 
Line 54:3 ID array 
Line 54:4 OPENBRACKET [ 
Line 54:5 ID idx 
Line 54:6 CLOSEBRACKET ] 
Line 54:7 SEMICOLON ; 
Line 55:1 CLOSEBRACE } 
Line 55:2 ELSE else 
Line 55:3 OPENBRACE { 
Line 55:4 CLOSEBRACE } 
Line 55:5 SEMICOLON ; 
Line 56:1 PUT put 
Line 56:2 OPENPAR ( 
Line 56:3 ID maxValue 
Line 56:4 CLOSEPAR ) 
Line 56:5 SEMICOLON ; 
Line 57:1 PUT put 
Line 57:2 OPENPAR ( 
Line 57:3 ID minValue 
Line 57:4 CLOSEPAR ) 
Line 57:5 SEMICOLON ; 
Line 58:1 CLOSEBRACE } 
Line 58:2 SEMICOLON ; 
Line 59:1 RETURN return 
Line 59:2 OPENPAR ( 
Line 59:3 ID maxValue 
Line 59:4 CLOSEPAR ) 
Line 59:5 SEMICOLON ; 
Line 60:1 CLOSEBRACE } 
Line 60:2 SEMICOLON ; 
Line 61:1 INT int 
Line 61:2 ID idx 
Line 61:3 SEMICOLON ; 
Line 62:1 INT int 
Line 62:2 ID findMin 
Line 62:3 OPENPAR ( 
Line 62:4 INT int 
Line 62:5 ID array 
Line 62:6 OPENBRACKET [ 
Line 62:7 INTEGER 100 
Line 62:8 CLOSEBRACKET ] 
Line 62:9 CLOSEPAR ) 
Line 62:10 OPENBRACE { 
Line 63:1 INT int 
Line 63:2 ID idx 
Line 63:3 SEMICOLON ; 
Line 64:1 ID minValue 
Line 64:2 ASSGN = 
Line 64:3 ID array 
Line 64:4 OPENBRACKET [ 
Line 64:5 INTEGER 100 
Line 64:6 CLOSEBRACKET ] 
Line 64:7 SEMICOLON ; 
Line 65:1 FOR for 
Line 65:2 OPENPAR ( 
Line 65:3 INT int 
Line 65:4 ID idx 
Line 65:5 ASSGN = 
Line 65:6 INTEGER 1 
Line 65:7 SEMICOLON ; 
Line 65:8 ID idx 
Line 65:9 LESSEQ <= 
Line 65:10 INTEGER 99 
Line 65:11 SEMICOLON ; 
Line 65:12 ID idx 
Line 65:13 ASSGN = 
Line 65:14 OPENPAR ( 
Line 65:15 ID idx 
Line 65:16 CLOSEPAR ) 
Line 65:17 PLUS + 
Line 65:18 INTEGER 1 
Line 65:19 CLOSEPAR ) 
Line 65:20 OPENBRACE { 
Line 66:1 CMT // 
Line 67:1 INT int 
Line 67:2 ID minValue 
Line 67:3 SEMICOLON ; 
Line 68:1 IF if 
Line 68:2 OPENPAR ( 
Line 68:3 ID array 
Line 68:4 OPENBRACKET [ 
Line 68:5 ID idx 
Line 68:6 CLOSEBRACKET ] 
Line 68:7 LT < 
Line 68:8 ID maxValue 
Line 68:9 CLOSEPAR ) 
Line 68:10 THEN then 
Line 68:11 OPENBRACE { 
Line 69:1 ID maxValue 
Line 69:2 ASSGN = 
Line 69:3 ID array 
Line 69:4 OPENBRACKET [ 
Line 69:5 ID idx 
Line 69:6 CLOSEBRACKET ] 
Line 69:7 SEMICOLON ; 
Line 70:1 CLOSEBRACE } 
Line 70:2 ELSE else 
Line 70:3 OPENBRACE { 
Line 70:4 CLOSEBRACE } 
Line 70:5 SEMICOLON ; 
Line 71:1 CLOSEBRACE } 
Line 71:2 SEMICOLON ; 
Line 72:1 RETURN return 
Line 72:2 OPENPAR ( 
Line 72:3 ID minValue 
Line 72:4 CLOSEPAR ) 
Line 72:5 SEMICOLON ; 
Line 73:1 CLOSEBRACE } 
Line 73:2 SEMICOLON ; 
Line 74:1 INT int 
Line 74:2 ID idx 
Line 74:3 SEMICOLON ; 
Line 75:1 CLOSEBRACE } 
Line 75:2 SEMICOLON ; 
Line 76:1 PROGRAM program 
Line 76:2 OPENBRACE { 
Line 77:1 OPENCMT /* 
Line 77:2 CLOSECMT */ 
Line 78:1 CMT // 
Line 79:1 IF if 
Line 79:2 OPENPAR ( 
Line 79:3 OPENPAR ( 
Line 79:4 ID id 
Line 79:5 OPENBRACKET [ 
Line 79:6 INTEGER 1 
Line 79:7 CLOSEBRACKET ] 
Line 79:8 DOT . 
Line 79:9 ID id 
Line 79:10 OPENBRACKET [ 
Line 79:11 INTEGER 2 
Line 79:12 CLOSEBRACKET ] 
Line 79:13 OPENBRACKET [ 
Line 79:14 INTEGER 3 
Line 79:15 CLOSEBRACKET ] 
Line 79:16 AND and 
Line 79:17 FLOAT 100.0 
Line 79:18 CLOSEPAR ) 
Line 79:19 EQUAL == 
Line 79:20 NOT not 
Line 79:21 MINUS - 
Line 79:22 ID id 
Line 79:23 OPENPAR ( 
Line 79:24 ID id 
Line 79:25 OPENBRACKET [ 
Line 79:26 INTEGER 1 
Line 79:27 CLOSEBRACKET ] 
Line 79:28 AND and 
Line 79:29 FLOAT 100.0 
Line 79:30 CLOSEPAR ) 
Line 79:31 CLOSEPAR ) 
Line 79:32 THEN then 
Line 79:33 OPENBRACE { 
Line 80:1 ID value 
Line 80:2 ASSGN = 
Line 80:3 ID id 
Line 80:4 OPENBRACKET [ 
Line 80:5 INTEGER 0 
Line 80:6 CLOSEBRACKET ] 
Line 80:7 OPENBRACKET [ 
Line 80:8 INTEGER 1 
Line 80:9 CLOSEBRACKET ] 
Line 80:10 OPENBRACKET [ 
Line 80:11 INTEGER 2 
Line 80:12 CLOSEBRACKET ] 
Line 80:13 PLUS + 
Line 80:14 NOT not 
Line 80:15 OPENPAR ( 
Line 80:16 PLUS + 
Line 80:17 ID id 
Line 80:18 OPENBRACKET [ 
Line 80:19 INTEGER 0 
Line 80:20 CLOSEBRACKET ] 
Line 80:21 OPENBRACKET [ 
Line 80:22 INTEGER 1 
Line 80:23 CLOSEBRACKET ] 
Line 80:24 OPENPAR ( 
Line 80:25 ID id 
Line 80:26 OPENBRACKET [ 
Line 80:27 INTEGER 0 
Line 80:28 CLOSEBRACKET ] 
Line 80:29 OPENBRACKET [ 
Line 80:30 INTEGER 1 
Line 80:31 CLOSEBRACKET ] 
Line 80:32 CLOSEPAR ) 
Line 80:33 CLOSEPAR ) 
Line 80:34 SEMICOLON ; 
Line 81:1 FOR for 
Line 81:2 OPENPAR ( 
Line 81:3 ID id 
Line 81:4 ID id 
Line 81:5 ASSGN = 
Line 81:6 NOT not 
Line 81:7 ID value 
Line 81:8 OPENBRACKET [ 
Line 81:9 INTEGER 0 
Line 81:10 CLOSEBRACKET ] 
Line 81:11 SEMICOLON ; 
Line 81:12 ID value 
Line 81:13 OPENPAR ( 
Line 81:14 ID id 
Line 81:15 NOTEQ <> 
Line 81:16 INTEGER 5 
Line 81:17 CLOSEPAR ) 
Line 81:18 LESSEQ <= 
Line 81:19 NOT not 
Line 81:20 MINUS - 
Line 81:21 ID id 
Line 81:22 OPENBRACKET [ 
Line 81:23 INTEGER 0 
Line 81:24 CLOSEBRACKET ] 
Line 81:25 SEMICOLON ; 
Line 81:26 ID value 
Line 81:27 OPENBRACKET [ 
Line 81:28 INTEGER 0 
Line 81:29 CLOSEBRACKET ] 
Line 81:30 ASSGN = 
Line 81:31 ID value 
Line 81:32 OPENBRACKET [ 
Line 81:33 INTEGER 1 
Line 81:34 CLOSEBRACKET ] 
Line 81:35 DOT . 
Line 81:36 ID v 
Line 81:37 OPENPAR ( 
Line 81:38 CLOSEPAR ) 
Line 81:39 CLOSEPAR ) 
Line 81:40 OPENBRACE { 
Line 82:1 IF if 
Line 82:2 OPENPAR ( 
Line 82:3 OPENPAR ( 
Line 82:4 ID id 
Line 82:5 OPENBRACKET [ 
Line 82:6 INTEGER 1 
Line 82:7 CLOSEBRACKET ] 
Line 82:8 DOT . 
Line 82:9 ID id 
Line 82:10 OPENBRACKET [ 
Line 82:11 INTEGER 2 
Line 82:12 CLOSEBRACKET ] 
Line 82:13 AND and 
Line 82:14 FLOAT 100.0 
Line 82:15 CLOSEPAR ) 
Line 82:16 OR or 
Line 82:17 ID id 
Line 82:18 OPENBRACKET [ 
Line 82:19 INTEGER 1 
Line 82:20 CLOSEBRACKET ] 
Line 82:21 DOT . 
Line 82:22 ID id 
Line 82:23 OPENBRACKET [ 
Line 82:24 INTEGER 2 
Line 82:25 CLOSEBRACKET ] 
Line 82:26 AND and 
Line 82:27 FLOAT 100.0 
Line 82:28 EQUAL == 
Line 82:29 ID id 
Line 82:30 OPENBRACKET [ 
Line 82:31 INTEGER 0 
Line 82:32 CLOSEBRACKET ] 
Line 82:33 PLUS + 
Line 82:34 NOT not 
Line 82:35 OPENPAR ( 
Line 82:36 PLUS + 
Line 82:37 ID id 
Line 82:38 OPENBRACKET [ 
Line 82:39 INTEGER 0 
Line 82:40 CLOSEBRACKET ] 
Line 82:41 OPENPAR ( 
Line 82:42 ID id 
Line 82:43 OPENBRACKET [ 
Line 82:44 INTEGER 1 
Line 82:45 CLOSEBRACKET ] 
Line 82:46 CLOSEPAR ) 
Line 82:47 CLOSEPAR ) 
Line 82:48 SLASH / 
Line 82:49 NOT not 
Line 82:50 MINUS - 
Line 82:51 ID variable 
Line 82:52 OPENBRACKET [ 
Line 82:53 INTEGER 0 
Line 82:54 CLOSEBRACKET ] 
Line 82:55 DOT . 
Line 82:56 ID v 
Line 82:57 OPENPAR ( 
Line 82:58 ID v 
Line 82:59 OPENBRACKET [ 
Line 82:60 INTEGER 1 
Line 82:61 CLOSEBRACKET ] 
Line 82:62 DOT . 
Line 82:63 ID id 
Line 82:64 AND and 
Line 82:65 FLOAT 100.0 
Line 82:66 CLOSEPAR ) 
Line 82:67 CLOSEPAR ) 
Line 82:68 THEN then 
Line 82:69 OPENBRACE { 
Line 83:1 GET get 
Line 83:2 OPENPAR ( 
Line 83:3 ID maxValue 
Line 83:4 CLOSEPAR ) 
Line 83:5 SEMICOLON ; 
Line 84:1 PUT put 
Line 84:2 OPENPAR ( 
Line 84:3 ID minValue 
Line 84:4 CLOSEPAR ) 
Line 84:5 SEMICOLON ; 
Line 85:1 CLOSEBRACE } 
Line 85:2 ELSE else 
Line 85:3 SEMICOLON ; 
Line 86:1 CLOSEBRACE } 
Line 86:2 SEMICOLON ; 
Line 87:1 CLOSEBRACE } 
Line 87:2 ELSE else 
Line 88:1 GET get 
Line 88:2 OPENPAR ( 
Line 88:3 ID maxValue 
Line 88:4 CLOSEPAR ) 
Line 88:5 SEMICOLON ; 
Line 89:1 SEMICOLON ; 
Line 90:1 RETURN return 
Line 90:2 OPENPAR ( 
Line 90:3 ID maxValue 
Line 90:4 CLOSEPAR ) 
Line 90:5 SEMICOLON ; 
Line 91:1 GET get 
Line 91:2 OPENPAR ( 
Line 91:3 ID maxValue 
Line 91:4 OPENBRACKET [ 
Line 91:5 INTEGER 0 
Line 91:6 CLOSEBRACKET ] 
Line 91:7 DOT . 
Line 91:8 ID A 
Line 91:9 DOT . 
Line 91:10 ID B 
Line 91:11 DOT . 
Line 91:12 ID C 
Line 91:13 OPENBRACKET [ 
Line 91:14 INTEGER 1 
Line 91:15 CLOSEBRACKET ] 
Line 91:16 CLOSEPAR ) 
Line 91:17 SEMICOLON ; 
Line 92:1 PUT put 
Line 92:2 OPENPAR ( 
Line 92:3 NOT not 
Line 92:4 OPENPAR ( 
Line 92:5 ID id 
Line 92:6 OPENBRACKET [ 
Line 92:7 INTEGER 1 
Line 92:8 CLOSEBRACKET ] 
Line 92:9 AND and 
Line 92:10 FLOAT 100.0 
Line 92:11 CLOSEPAR ) 
Line 92:12 CLOSEPAR ) 
Line 92:13 SEMICOLON ; 
Line 93:1 INT int 
Line 93:2 ID value 
Line 93:3 SEMICOLON ; 
Line 94:1 RESERVED_FLOAT float 
Line 94:2 ID v 
Line 94:3 SEMICOLON ; 
Line 95:1 ID Custom 
Line 95:2 ID variable 
Line 95:3 OPENBRACKET [ 
Line 95:4 INTEGER 1 
Line 95:5 CLOSEBRACKET ] 
Line 95:6 OPENBRACKET [ 
Line 95:7 INTEGER 2 
Line 95:8 CLOSEBRACKET ] 
Line 95:9 SEMICOLON ; 
Line 96:1 CLOSEBRACE } 
Line 96:2 SEMICOLON ; 
Line 97:1 RESERVED_FLOAT float 
Line 97:2 ID randomize 
Line 97:3 OPENPAR ( 
Line 97:4 CLOSEPAR ) 
Line 97:5 OPENBRACE { 
Line 98:1 RESERVED_FLOAT float 
Line 98:2 ID value 
Line 98:3 SEMICOLON ; 
Line 99:1 ID value 
Line 99:2 ASSGN = 
Line 99:3 INTEGER 100 
Line 99:4 STAR * 
Line 99:5 OPENPAR ( 
Line 99:6 INTEGER 2 
Line 99:7 PLUS + 
Line 99:8 FLOAT 3.0 
Line 99:9 SLASH / 
Line 99:10 FLOAT 7.0006 
Line 99:11 CLOSEPAR ) 
Line 99:12 SEMICOLON ; 
Line 100:1 ID value 
Line 100:2 ASSGN = 
Line 100:3 FLOAT 1.05 
Line 100:4 PLUS + 
Line 100:5 OPENPAR ( 
Line 100:6 OPENPAR ( 
Line 100:7 FLOAT 2.04 
Line 100:8 STAR * 
Line 100:9 FLOAT 2.47 
Line 100:10 CLOSEPAR ) 
Line 100:11 MINUS - 
Line 100:12 FLOAT 3.0 
Line 100:13 CLOSEPAR ) 
Line 100:14 PLUS + 
Line 100:15 FLOAT 7.0006 
Line 100:16 SEMICOLON ; 
Line 101:1 RETURN return 
Line 101:2 OPENPAR ( 
Line 101:3 ID value 
Line 101:4 CLOSEPAR ) 
Line 101:5 SEMICOLON ; 
Line 102:1 CLOSEBRACE } 
Line 102:2 SEMICOLON ; 
Line 103:1 CMT // 
Line 104:1 ID Custom 
Line 104:2 ID getCustomValue 
Line 104:3 OPENPAR ( 
Line 104:4 CLOSEPAR ) 
Line 104:5 OPENBRACE { 
Line 105:1 CMT // 
Line 106:1 INT int 
Line 106:2 ID sample 
Line 106:3 OPENBRACKET [ 
Line 106:4 INTEGER 100 
Line 106:5 CLOSEBRACKET ] 
Line 106:6 ASSGN = 
Line 106:7 OPENBRACE { 
Line 106:8 INTEGER 10 
Line 106:9 COMMA , 
Line 106:10 INTEGER 10 
Line 106:11 CLOSEBRACE } 
Line 106:12 SEMICOLON ; 
Line 107:1 INT int 
Line 107:2 ID idx 
Line 107:3 SEMICOLON ; 
Line 108:1 INT int 
Line 108:2 ID maxValue 
Line 108:3 SEMICOLON ; 
Line 109:1 INT int 
Line 109:2 ID minValue 
Line 109:3 SEMICOLON ; 
Line 110:1 ID Utility 
Line 110:2 ID utility 
Line 110:3 SEMICOLON ; 
Line 111:1 ID Utility 
Line 111:2 ID arrayUtility 
Line 111:3 OPENBRACKET [ 
Line 111:4 INTEGER 2 
Line 111:5 CLOSEBRACKET ] 
Line 111:6 OPENBRACKET [ 
Line 111:7 INTEGER 3 
Line 111:8 CLOSEBRACKET ] 
Line 111:9 OPENBRACKET [ 
Line 111:10 INTEGER 6 
Line 111:11 CLOSEBRACKET ] 
Line 111:12 OPENBRACKET [ 
Line 111:13 INTEGER 7 
Line 111:14 CLOSEBRACKET ] 
Line 111:15 SEMICOLON ; 
Line 112:1 FOR for 
Line 112:2 OPENPAR ( 
Line 112:3 INT int 
Line 112:4 ID t 
Line 112:5 ASSGN = 
Line 112:6 INTEGER 0 
Line 112:7 SEMICOLON ; 
Line 112:8 ID t 
Line 112:9 LESSEQ <= 
Line 112:10 INTEGER 100 
Line 112:11 SEMICOLON ; 
Line 112:12 ID t 
Line 112:13 ASSGN = 
Line 112:14 ID t 
Line 112:15 PLUS + 
Line 112:16 INTEGER 1 
Line 112:17 CLOSEPAR ) 
Line 112:18 OPENBRACE { 
Line 113:1 IF if 
Line 113:2 OPENPAR ( 
Line 113:3 OPENPAR ( 
Line 113:4 ID id 
Line 113:5 OPENBRACKET [ 
Line 113:6 INTEGER 1 
Line 113:7 CLOSEBRACKET ] 
Line 113:8 DOT . 
Line 113:9 ID id 
Line 113:10 OPENBRACKET [ 
Line 113:11 INTEGER 2 
Line 113:12 CLOSEBRACKET ] 
Line 113:13 AND and 
Line 113:14 FLOAT 100.0 
Line 113:15 CLOSEPAR ) 
Line 113:16 OR or 
Line 113:17 ID id 
Line 113:18 OPENBRACKET [ 
Line 113:19 INTEGER 1 
Line 113:20 CLOSEBRACKET ] 
Line 113:21 DOT . 
Line 113:22 ID id 
Line 113:23 OPENBRACKET [ 
Line 113:24 INTEGER 2 
Line 113:25 CLOSEBRACKET ] 
Line 113:26 AND and 
Line 113:27 FLOAT 100.0 
Line 113:28 EQUAL == 
Line 113:29 ID id 
Line 113:30 OPENBRACKET [ 
Line 113:31 INTEGER 0 
Line 113:32 CLOSEBRACKET ] 
Line 113:33 PLUS + 
Line 113:34 NOT not 
Line 113:35 OPENPAR ( 
Line 113:36 PLUS + 
Line 113:37 ID id 
Line 113:38 OPENBRACKET [ 
Line 113:39 INTEGER 0 
Line 113:40 CLOSEBRACKET ] 
Line 113:41 OPENPAR ( 
Line 113:42 ID id 
Line 113:43 OPENBRACKET [ 
Line 113:44 INTEGER 1 
Line 113:45 CLOSEBRACKET ] 
Line 113:46 CLOSEPAR ) 
Line 113:47 CLOSEPAR ) 
Line 113:48 SLASH / 
Line 113:49 NOT not 
Line 113:50 MINUS - 
Line 113:51 ID variable 
Line 113:52 OPENBRACKET [ 
Line 113:53 INTEGER 0 
Line 113:54 CLOSEBRACKET ] 
Line 113:55 DOT . 
Line 113:56 ID v 
Line 113:57 OPENPAR ( 
Line 113:58 ID v 
Line 113:59 OPENBRACKET [ 
Line 113:60 INTEGER 1 
Line 113:61 CLOSEBRACKET ] 
Line 113:62 DOT . 
Line 113:63 ID id 
Line 113:64 AND and 
Line 113:65 FLOAT 100.0 
Line 113:66 CLOSEPAR ) 
Line 113:67 CLOSEPAR ) 
Line 113:68 THEN then 
Line 113:69 OPENBRACE { 
Line 114:1 GET get 
Line 114:2 OPENPAR ( 
Line 114:3 ID maxValue 
Line 114:4 CLOSEPAR ) 
Line 114:5 SEMICOLON ; 
Line 115:1 PUT put 
Line 115:2 OPENPAR ( 
Line 115:3 ID minValue 
Line 115:4 CLOSEPAR ) 
Line 115:5 SEMICOLON ; 
Line 116:1 GET get 
Line 116:2 OPENPAR ( 
Line 116:3 ID sample 
Line 116:4 OPENBRACKET [ 
Line 116:5 ID t 
Line 116:6 CLOSEBRACKET ] 
Line 116:7 CLOSEPAR ) 
Line 116:8 SEMICOLON ; 
Line 117:1 ID sample 
Line 117:2 OPENBRACKET [ 
Line 117:3 ID t 
Line 117:4 CLOSEBRACKET ] 
Line 117:5 ASSGN = 
Line 117:6 OPENPAR ( 
Line 117:7 ID sample 
Line 117:8 OPENBRACKET [ 
Line 117:9 ID t 
Line 117:10 CLOSEBRACKET ] 
Line 117:11 STAR * 
Line 117:12 ID randomize 
Line 117:13 OPENPAR ( 
Line 117:14 CLOSEPAR ) 
Line 117:15 CLOSEPAR ) 
Line 117:16 SEMICOLON ; 
Line 118:1 CLOSEBRACE } 
Line 118:2 ELSE else 
Line 118:3 CMT // 
Line 119:1 CLOSEBRACE } 
Line 119:2 SEMICOLON ; 
Line 120:1 RETURN return 
Line 120:2 OPENPAR ( 
Line 120:3 ID value 
Line 120:4 CLOSEPAR ) 
Line 120:5 SEMICOLON ; 
Line 121:1 RETURN return 
Line 121:2 RESERVED_FLOAT float 
Line 121:3 SEMICOLON ; 
Line 122:1 CLOSEBRACE } 
Line 122:2 SEMICOLON ; 
