class	class
id	id
{	{
}	}
;	;
program	program
(	(
)	)
ε	ε
.	.
[	[
]	]
for	for
if	if
then	then
else	else
get	get
put	put
return	return
+	+
-	-
floatValue	floatValue
intValue	intValue
not	not
float	float
int	int
,	,
=	=
<	<
<=	<=
<>	<>
==	==
>	>
>=	>=
or	or
*	*
/	/
and	and
classDecl	class
progBody	program
funcBody	{
varDeclFunctDef_list	ε, id, float, int
varDeclFunctDef_tail	(, ;, ε, [
indiceIdnestList_tail	., [, ε
varDeclStatement_tail	id, ., [, ε, =
funcBody_	id, ε, float, int, for, if, get, put, return
restOfStatment	for, if, get, put, return
statBlock	{, ε, id, for, if, get, put, return
exp_	ε, <, <=, <>, ==, >, >=
arithExpr_	ε, +, -, or
sign	+, -
term_	ε, *, /, and
factor	(, floatValue, intValue, not, id, +, -
variable_	id
idnest_list_	ε, .
idnest_	.
factor_	(, ε
indice	[
arraySize	[
type	id, float, int
typeNumeric	float, int
fParams	ε, id, float, int
aParams	ε, (, floatValue, intValue, not, id, +, -
fParamsTail	,
aParamsTail	,
classDecl_list	ε, class
funcDef_list	ε, id, float, int
statement_list	ε, id, for, if, get, put, return
arraySize_list	ε, [
indice_list	ε, [
fParamsTail_list	ε, ,
aParamsTail_list	ε, ,
assignOp	=
relOp	<, <=, <>, ==, >, >=
addOp	+, -, or
multOp	*, /, and
assignmentStatment	id
assignStat	id
prog	ε, class, program
funcDef	id, float, int
statement	id, for, if, get, put, return
term	(, floatValue, intValue, not, id, +, -
arithExpr	(, floatValue, intValue, not, id, +, -
expr	(, floatValue, intValue, not, id, +, -
relExpr	(, floatValue, intValue, not, id, +, -