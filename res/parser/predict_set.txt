1	prog → A progBody	class, program
2	A → classDecl A	class
3	A → ε	program
4	classDecl → class id { V } ;	class
5	V → T V	int, float, id
6	V → ε	}
7	T → type id K	int, float, id
8	K → S	;,
9	K → M	(
10	progBody → program funcBody ; C	program
11	C → funcDef C	int, float, id
12	C → ε	$
13	funcHead → type id ( fParams )	int, float, id
14	funcDef → funcHead funcBody ;	int, float, id
15	M → ( fParams ) funcBody ;	(
16	funcBody → { R }	{
17	R → L R	id, if, for, get, put, return, float, int
18	R → ε	}
19	L → id P	id
20	L → statement	if, for, get, put, return
21	L → Q id S	float, int
22	Q → float	float
23	Q → int	int
24	P → id S	id
25	P → H G assignOp expr ;	, ., =
26	E → statement E	if, for, get, put, return
27	E → ε	}
28	E → assignStat ; E	id
29	varDecl → type id S	int, float, id
30	S → F ;	, ;
31	F → arraySize F	
32	F → ε	,, ;, )
33	statement → if ( expr ) then statBlock else statBlock ;	if
34	statement → for ( type id assignOp expr ; relExpr ; assignStat ) statBlock ;	for
35	statement → get ( variable ) ;	get
36	statement → put ( expr ) ;	put
37	statement → return ( expr ) ;	return
38	assignStat → variable assignOp expr	id
39	statBlock → { E }	{
40	statBlock → statement	if, for, get, put, return
41	statBlock → assignStat ;	id
42	statBlock → ε	else, ;
43	expr → arithExpr X	id, num, integer, (, not, +, -
44	X → relOp arithExpr	==, <>, <, >, <=, >=
45	X → ε	,, ), ;
46	relExpr → arithExpr relOp arithExpr	id, num, integer, (, not, +, -
47	arithExpr → term Y	id, num, integer, (, not, +, -
48	Y → ε	, ), ==, <>, <, >, <=, >=, ;, ,
49	Y → addOp term Y	+, -, or
50	sign → +	+
51	sign → -	-
52	term → factor Z	id, num, integer, (, not, +, -
53	Z → ε	+, -, or, , ), ==, <>, <, >, <=, >=, ;, ,
54	Z → multOp factor Z	*, /, and
55	factor → id H G O	id
56	factor → num	num
57	factor → integer	integer
58	factor → ( arithExpr )	(
59	factor → not factor	not
60	factor → sign factor	+, -
61	O → ( aParams )	(
62	O → ε	*, /, and, +, -, or, , ), ==, <>, <, >, <=, >=, ;, ,
63	variable → id H G	id
64	G → idnest G	.
65	G → ε	(, =, ), *, /, and, +, -, or, , ==, <>, <, >, <=, >=, ;, ,
66	H → indice H	
67	H → ε	., =, ), *, /, and, +, -, or, , ==, <>, <, >, <=, >=, ;, ,, (
68	idnest → . id H	.
69	indice → [ arithExpr ]	
70	arraySize → [ integer ]	
71	type → int	int
72	type → float	float
73	type → id	id
74	fParams → type id F I	int, float, id
75	fParams → ε	)
76	I → fParamsTail I	,
77	I → ε	)
78	aParams → expr J	id, num, integer, (, not, +, -
79	aParams → ε	)
80	J → aParamsTail J	,
81	J → ε	)
82	fParamsTail → , type id F	,
83	aParamsTail → , expr	,
84	assignOp → =	=
85	relOp → ==	==
86	relOp → <>	<>
87	relOp → <	<
88	relOp → >	>
89	relOp → <=	<=
90	relOp → >=	>=
91	addOp → +	+
92	addOp → -	-
93	addOp → or	or
94	multOp → *	*
95	multOp → /	/
96	multOp → and	and