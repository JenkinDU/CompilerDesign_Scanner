FOLLOW(prog) = $
FOLLOW(A) = program
FOLLOW(classDecl) = class, program
FOLLOW(V) = }
FOLLOW(T) = int, float, id, }
FOLLOW(K) = int, float, id, }
FOLLOW(progBody) = $
FOLLOW(C) = $
FOLLOW(funcHead) = {
FOLLOW(funcDef) = int, float, id, $
FOLLOW(M) = int, float, id, }
FOLLOW(funcBody) = ;
FOLLOW(R) = }
FOLLOW(L) = id, if, for, get, put, return, float, int, }
FOLLOW(Q) = id
FOLLOW(P) = id, if, for, get, put, return, float, int, }
FOLLOW(E) = }
FOLLOW(varDecl) = 
FOLLOW(S) = id, if, for, get, put, return, float, int, }
FOLLOW(F) = ,, ;, )
FOLLOW(statement) = if, for, get, put, return, id, else, ;, }, float, int
FOLLOW(assignStat) = ;, )
FOLLOW(statBlock) = else, ;
FOLLOW(expr) = ,, ), ;
FOLLOW(X) = ,, ), ;
FOLLOW(relExpr) = ;
FOLLOW(arithExpr) = ], ), ==, <>, <, >, <=, >=, ;, ,
FOLLOW(Y) = ], ), ==, <>, <, >, <=, >=, ;, ,
FOLLOW(sign) = id, num, integer, (, not, +, -
FOLLOW(term) = +, -, or, ], ), ==, <>, <, >, <=, >=, ;, ,
FOLLOW(Z) = +, -, or, ], ), ==, <>, <, >, <=, >=, ;, ,
FOLLOW(factor) = *, /, and, +, -, or, ], ), ==, <>, <, >, <=, >=, ;, ,
FOLLOW(O) = *, /, and, +, -, or, ], ), ==, <>, <, >, <=, >=, ;, ,
FOLLOW(variable) = =, )
FOLLOW(G) = (, =, ), *, /, and, +, -, or, ], ==, <>, <, >, <=, >=, ;, ,
FOLLOW(H) = ., =, ), *, /, and, +, -, or, ], ==, <>, <, >, <=, >=, ;, ,, (
FOLLOW(idnest) = ., (, =, ), *, /, and, +, -, or, ], ==, <>, <, >, <=, >=, ;, ,
FOLLOW(indice) = [, ., =, ), *, /, and, +, -, or, ], ==, <>, <, >, <=, >=, ;, ,, (
FOLLOW(arraySize) = [, ,, ;, )
FOLLOW(type) = id
FOLLOW(fParams) = )
FOLLOW(I) = )
FOLLOW(aParams) = )
FOLLOW(J) = )
FOLLOW(fParamsTail) = ,, )
FOLLOW(aParamsTail) = ,, )
FOLLOW(assignOp) = id, num, integer, (, not, +, -
FOLLOW(relOp) = id, num, integer, (, not, +, -
FOLLOW(addOp) = id, num, integer, (, not, +, -
FOLLOW(multOp) = id, num, integer, (, not, +, -